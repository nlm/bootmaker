#!/bin/sh

VERBOSE=${INITRD_VERBOSE:-0}

# Loading functions
. /functions

[ -f /etc/banner ] && (echo; cat /etc/banner; echo) || echo "BootMaker"
run hostname bootmaker
esuccess "Image build: $(cat /.builddate)"
esuccess "Kernel version: $(busybox uname -a)"
if [ ! -d "/lib/modules/$(uname -r)" ]; then
	eerror "module directory not found: /lib/modules/$(uname -r)"
fi
echo

# Mount the initial filesystems
log_begin_msg "Mounting pseudo-filesystems..."

[ -d /dev ] || run mkdir -m 0755 /dev
if ! emount -t devtmpfs -o nosuid,mode=0755 udev /dev; then
        echo "W: devtmpfs not available, falling back to tmpfs for /dev"
        emount -t tmpfs -o nosuid,mode=0755 udev /dev
        [ -e /dev/console ] || mknod -m 0600 /dev/console c 5 1
        [ -e /dev/null ] || mknod /dev/null c 1 3
fi
run mkdir /dev/pts
emount -t devpts -o noexec,nosuid,gid=5,mode=0620 devpts /dev/pts || true

[ -d /run ] || run mkdir -pm 0755 /run
emount -t tmpfs -o "noexec,nosuid,size=10%,mode=0755" tmpfs /run

[ -d /var ] || run mkdir -pm 0755 /var
run ln -s /run /var/run

[ -d /sys ] || run mkdir /sys
emount -t sysfs -o nodev,noexec,nosuid none /sys
run mdev -s

[ -d /proc ] || run mkdir /proc
emount -t proc -o nodev,noexec,nosuid none /proc
log_end_msg

[ -d /tmp ] || mkdir /tmp
[ -d /var/lock ] || mkdir -p /var/lock

# Some things don't work properly without /etc/mtab.
run ln -sf /proc/mounts /etc/mtab
echo

# Detect Hardware
log_begin_msg "Detecting hardware..."
udevd --daemon
udevadm trigger
udevadm settle
log_end_msg
echo

log_begin_msg "Retrieving system info"
esuccess "Kernel cmdline:    $(cat /proc/cmdline)"
esuccess "Physycal memory:   $(grep MemTotal /proc/meminfo | awk '{ print $2 " " $3}')"
esuccess "CPU model:         $(echo -ne $(grep ^model\ name /proc/cpuinfo  | cut -d: -f2 | uniq))"
esuccess "CPU cores:         $(grep -c ^processor /proc/cpuinfo)"
log_end_msg
echo

# Configure network
log_begin_msg "Configuring network"
cat /dev/null > /etc/network/interfaces
for interface in $(ls -1 /sys/class/net); do
    if [ "$interface" = "lo" ]; then
        ( echo "auto lo" && echo "iface lo inet loopback" ) \
            >> /etc/network/interfaces
    else
        ( echo "auto $interface" && echo "iface $interface inet dhcp" ) \
            >> /etc/network/interfaces
    fi
done

run ifup -a
ip a | grep inet
log_end_msg
echo

log_success_msg "Dropping a shell"
log_end_msg
while true; do
    (setsid cttyhack sh)
done
